name: Deploy website

on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
  schedule:
    - cron: '42 16 1/7 * *'

env:
  MDBOOK_LINKCHECK_VER: 0.7.6

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the guide
      uses: actions/checkout@v2
      with:
        path: ./

    - name: Install mdbook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: 0.4.18

    # FIXME: Keep this up to date
    - name: Install mdbook-linkcheck
      run: | # `-L` because GitHub performs a redirection
        curl -L -o mdbook-linkcheck.zip "https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/download/v${MDBOOK_LINKCHECK_VER}/mdbook-linkcheck.x86_64-unknown-linux-gnu.zip"
        unzip mdbook-linkcheck.zip mdbook-linkcheck
        chmod +x mdbook-linkcheck

    - name: Build
      working-directory: ./
      env:
        MDBOOK_BUILD__CREATE_MISSING: "false" # Prevent creating missing files in SUMMARY.md
        MDBOOK_OUTPUT__LINKCHECK__COMMAND: "../mdbook-linkcheck"
      run: |
        mdbook build

    - name: Store final build
      uses: actions/upload-artifact@v2
      with:
        name: Build output
        path: ./src/guide
        if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # Do not run this unless *pushing* to `master`
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Checkout Blue-Fire-Modding-Guide/gh-pages
      uses: actions/checkout@v2
      with:
        path: ./
        ref: gh-pages

    - name: Delete all current files
      run: |
        rm -vrf ./*

    - name: Unpack build
      uses: actions/download-artifact@v2
      with:
        name: Build output
        path: ./

    - name: Deploy
      working-directory: /
      run: |
        git config --local user.name "GitHub Action"
        git config --global user.email "spudwitch@gmail.com"
        git remote -v
        git branch -v
        git add -A
        git commit -am 'Update build'
        git push -v
